name: blink-build

on:
  schedule:
    - cron: "0 0 * * Sat"
  workflow_dispatch:

jobs:
  build:
    # runs-on: macOS-latest
    runs-on: macos-13
    steps:
    # - uses: swift-actions/setup-swift@v1
    - uses: actions/checkout@v2
      with:
        submodules: true
        repository: "blinksh/blink"

    - name: switch xcode
      run: sudo xcode-select -s '/Applications/Xcode_15.0.app/Contents/Developer'

    - name: use cache
      id: cache
      uses: actions/cache@v2
      with:
        path: |
          xcfs/.build
          Frameworks/ios_system/xcfs/.build
        key: ${{ runner.os }}-${{ hashFiles('get_frameworks.sh', 'xcfs/Package.swift') }}

    - name: get frameworks
      if: steps.cache.outputs.cache-hit != 'true'
      run: ./get_frameworks.sh

    - name: copy xcconfig
      run: cp template_setup.xcconfig developer_setup.xcconfig

    - name: actual build
      run: set -o pipefail && xcodebuild archive -project Blink.xcodeproj -scheme Blink -sdk macos -configuration Debug clean build IPHONEOS_DEPLOYMENT_TARGET='16.1' CODE_SIGN_IDENTITY='' CODE_SIGNING_REQUIRED=NO CODE_SIGNING_ALLOWED=NO ONLY_ACTIVE_ARCH=NO | tee build.log | xcpretty

    - name: setup Blink.app directory
      run: |
        cd ~
        mkdir Payload
        mv ~/Library/Developer/Xcode/Archives/*/*/Products/Applications/Blink.app Blink.app

    - name: create dmg
      uses: QQxiaoming/create-dmg-action@v0.0.2
      with:
        name: 'BlinkShell.dmg'
        src_dir: 'Blink.app'

    - name: upload dmg
      uses: actions/upload-artifact@v2.2.0
      with:
        name: 'BlinkShell'
        path: BlinkShell.dmg

